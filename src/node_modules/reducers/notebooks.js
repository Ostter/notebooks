import * as R from "ramda";

import {
  FETCH_NOTEBOOKS_SUCCESS,
  LOAD_MORE_NOTEBOOKS_SUCCESS,
  FETCH_NOTEBOOK_BY_ID_SUCCESS
} from "actions/actionTypes";

const initialState = {};

//{type, payload} деструктуризация из action
export default (state = initialState, { type, payload }) => {
  switch (type) {
    case FETCH_NOTEBOOKS_SUCCESS:
      //indexBy - Созздаем массив, где key - выбранный параметр (id), а value - сам объект целиком
      const newValues = R.indexBy(R.prop("id"), payload);
      return R.merge(state, newValues);
    case LOAD_MORE_NOTEBOOKS_SUCCESS:
      const moreValues = R.indexBy(R.prop("id"), payload);
      return R.merge(state, moreValues);
    case FETCH_NOTEBOOK_BY_ID_SUCCESS:
      //добавляем в state в notebooks объект с ключом payload.id и содержимым payload
      //то есть в state.notebooks вместо целой страницы объектов-ноутбуков будет всего 1
      return R.assoc(payload.id, payload, state);
    default:
      return state;
  }
};
