import React from 'react'
import {connect} from 'react-redux'
import { Link, withRouter } from 'react-router-dom';
import {compose} from 'redux'
import * as R from 'ramda'
import classNames from 'classnames'

import {
    getCategories,
    getActiveCategoryId
} from 'selectors'

const Categories = ({categories, activeCategoryId}) => {
    console.log('Component - activeCategoryId', activeCategoryId)
    const renderCategory = (category, index) => {
        //активная категория должна подсвечиваться, поэтому добавим функцию
        const getActiveState = R.propEq('id', activeCategoryId)

        //в зависимости от getActiveState(category) linkClass будет активным или нет
        const linkClass = classNames({
            'list-group-item': true,
            'active': getActiveState(category)
        })

        return (
            <Link
                to={`/categories/${category.id}`}
                className={linkClass}
                //className='list-group-item'
                key={index}
            >
                {category.name}
            </Link>
        )
    }

    const renderAllCategory = () => {
        const linkClass = classNames({
              'list-group-item': true,
               //проверка activeCategoryId на undefined: тогда возвращает 'active': true и All подсвечивается
              'active': R.isNil(activeCategoryId)
        })

        return (
            <Link
                to='/'
                className={linkClass}
            >
                All
            </Link>
        )
    }

    return (
        <div className='well'>
            <h4>Brand</h4>
            <div className='list-group'>
                {/*добавим ссылку на все товары, чтобы быа возможность перейти на дом. стр.*/}
                {renderAllCategory()}
                {categories.map((category, index) => renderCategory(category, index))}
            </div>
        </div>
    )
}

const mapStateToProps = (state, ownProps) => ({
    categories: getCategories(state),
    activeCategoryId: getActiveCategoryId(ownProps) //активная категория или нет?
})

export default compose(
    withRouter, //позволяет получать ownProps из роутера (например доступ к параметрам страницы)
    connect(mapStateToProps, null)
)(Categories)

//export default (withRouter(connect(mapStateToProps, null)(Categories))