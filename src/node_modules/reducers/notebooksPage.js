import * as R from 'ramda'

import {
    FETCH_NOTEBOOKS_SUCCESS,
    LOAD_MORE_NOTEBOOKS_SUCCESS,
    SEARCH_NOTEBOOK
} from 'actions/actionTypes'

//cостояние будет вида: state:notebooksPage:ids || state:notebooksPage:search
const initialState = {
  ids: [],
  search: ''
};

// {type, payload} - реструктуризация свойст объекта action
export default (state = initialState, {type, payload}) => {
  switch (type) {
    case FETCH_NOTEBOOKS_SUCCESS:
      return R.merge(state, {
        ids: R.pluck('id', payload)
      });
      case LOAD_MORE_NOTEBOOKS_SUCCESS:
        //найдем все id, которые получили в результате этого метода
        const ids = R.pluck('id', payload);
        //не перетираем, а склеиваем с сущестующим массивом
        return R.merge(state, {
            ids: R.concat(ids, state.ids)
        });
      case SEARCH_NOTEBOOK:
          //меняем поле search на новое (просто обновляем значение поля)
          return R.merge(state, {
              search: payload
          })

    default:
      return state;
  }
}

